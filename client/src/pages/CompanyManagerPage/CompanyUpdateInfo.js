import {
  Box,
  Button,
  Container,
  makeStyles,
  Paper,
  Typography,
} from '@material-ui/core';
import React, { useEffect, useState } from 'react';
import { useForm, useFieldArray, useWatch } from 'react-hook-form';
import MuiDatePicker from '../../components/UI/Mui/MuiDatePicker';
import MuiSelect from '../../components/UI/Mui/MuiSelect';
import MuiTextField from '../../components/UI/Mui/MuiTextField';
import UploadImage from '../../components/UI/UploadImage/UploadImage';

const defaultValues = {
  company: 'LD Food',
  intro: 'Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi LD Food',
  type: 'Product',
  location: 'H√† N·ªôi',
  workTime: 'Th·ª© 2 - Th·ª© 6',
  ot: 'No OT',
  photo: '/mario.jpg',
  numEmployees: 3,
  env: [
    'C√≥ t·ªëi thi·ªÉu 1 nƒÉm kinh nghi·ªám l√†m v·ªÅ framework NodeJS trong ph√°t tri·ªÉn ph·∫ßn m·ªÅm',
    'N·∫Øm v·ªØng ki·∫øn th·ª©c l·∫≠p tr√¨nh c∆° b·∫£n, l·∫≠p tr√¨nh h∆∞·ªõng ƒë·ªëi t∆∞·ª£ng (OOP), c∆° s·ªü d·ªØ li·ªáu (DBMS)',
    'Ti·∫øng Anh ƒë·ªçc hi·ªÉu t√†i li·ªáu k·ªπ thu·∫≠t.',
  ],
  opportunity: [
    'Tham gia ph√°t tri·ªÉn c√°c d·ª± √°n ph√°t tri·ªÉn ph·∫ßn m·ªÅm outsourcing cho Nh·∫≠t s·ª≠ d·ª•ng framework NodeJS c·ªßa Javascript',
    'ƒê·ªÅ xu·∫•t gi·∫£i ph√°p, xu h∆∞·ªõng c√¥ng ngh·ªá m·ªõi ƒë·ªÉ n√¢ng cao ch·∫•t l∆∞·ª£ng s·∫£n ph·∫©m cho kh√°ch h√†ng',
    'Ph·ªëi h·ª£p hi·ªáu qu·∫£ c√πng nh√≥m thi·∫øt k·∫ø, l·∫≠p tr√¨nh ƒë·ªÉ cho ra s·∫£n ph·∫©m t·ªët nh·∫•t',
  ],
};
const useStyles = makeStyles((theme) => ({
  root: {
    padding: theme.spacing(4),
    marginTop: theme.spacing(2),
  },
}));

const CompanyUpdateInfo = () => {
  const { handleSubmit, getValues, control, reset, register, setValue, watch } =
    useForm({
      defaultValues,
    });

  const {
    fields: envFields,
    append: envAppend,
    remove: envRemove,
  } = useFieldArray({
    control,
    name: 'env',
  });

  const {
    fields: opportunityFields,
    append: opportunityAppend,
    remove: opportunityRemove,
  } = useFieldArray({
    control,
    name: 'opportunity',
  });

  useEffect(() => {
    reset(defaultValues);
  }, [reset]);
  const [open, setOpen] = useState(false);
  const classes = useStyles();
  const photo = useWatch({
    control,
    name: 'photo',
  });

  return (
    <Container maxWidth="sm">
      <Paper className={classes.root}>
        <Box
          display="flex"
          alignItems="center"
          justifyContent="center"
          marginBottom={2}
        >
          <Typography variant="h6">ü¶π‚Äç‚ôÇÔ∏è C·∫≠p nh·∫≠t th√¥ng tin üíå</Typography>
        </Box>
        <form
          onSubmit={handleSubmit((data) => {
            console.log(data);
          })}
          className="form"
        >
          <Box
            display="flex"
            alignItems="center"
            justifyContent="center"
            style={{
              width: '170px',
              height: '170px',
            }}
          >
            <img
              src={`${photo}`}
              alt="company"
              style={{
                maxWidth: '170px',
                maxHeight: '170px',
              }}
            />
          </Box>
          <Button
            variant="contained"
            color="primary"
            onClick={() => setOpen(true)}
            style={{
              marginTop: 16,
              marginBottom: 16,
            }}
          >
            C·∫≠p nh·∫≠t logo
          </Button>

          <UploadImage
            open={open}
            setOpen={setOpen}
            setValue={setValue}
            control={control}
          />

          <MuiTextField
            control={control}
            getValues={getValues}
            nameField="company"
            label="T√™n c√¥ng ty"
          />
          <MuiTextField
            control={control}
            getValues={getValues}
            nameField="intro"
            label="Gi·ªõi thi·ªáu t·ªïng quan"
          />
          <MuiTextField
            control={control}
            getValues={getValues}
            nameField="location"
            label="V·ªã tr√≠"
            register={register}
          />
          <MuiTextField
            control={control}
            getValues={getValues}
            nameField="type"
            label="Ki·ªÉu c√¥ng ty"
          />
          <MuiTextField
            control={control}
            getValues={getValues}
            nameField="numEmployees"
            label="S·ªë l∆∞·ª£ng nh√¢n vi√™n"
          />
          <MuiTextField
            control={control}
            getValues={getValues}
            nameField="workTime"
            label="Kho·∫£ng th·ªùi gian l√†m vi·ªác"
          />
          <MuiTextField
            control={control}
            getValues={getValues}
            nameField="ot"
            label="Ch·∫ø ƒë·ªô OT"
          />
          {/* <MuiSelect
            control={control}
            nameField="location"
            label="Th√†nh ph·ªë"
            menus={[
              { text: 'H√† N·ªôi', value: 'H√† N·ªôi' },
              { text: 'H·ªì Ch√≠ Minh', value: 'H·ªì Ch√≠ Minh' },
              { text: 'ƒê√† N·∫µng', value: 'ƒê√† N·∫µng' },
              { text: 'others', value: 'Other' },
            ]}
          /> */}

          {/* {tagFields.map((tag, index) => (
            <Controller
              control={control}
              key={tag.id}
              name={`tags[${index}]`}
              render={({ ...props }) => (
                <>
                  <TextField {...props} multiline={true} />
                  <Button
                    variant="contained"
                    color="primary"
                    size="small"
                    onClick={() => tagRemove(index)}
                  >
                    Remove
                  </Button>
                </>
              )}
            />
          ))} */}

          <Typography variant="h5">M√¥i tr∆∞·ªùng l√†m vi·ªác</Typography>
          <Button
            variant="contained"
            color="primary"
            size="small"
            onClick={() => envAppend({ name: ' ' })}
          >
            Th√™m
          </Button>
          {envFields.map((item, index) => (
            <Box
              key={item.id}
              display="flex"
              alignItems="center"
              paddingLeft={4}
            >
              <MuiTextField
                fullWidth={false}
                control={control}
                getValues={getValues}
                register={register}
                nameField={`env[${index}]`}
              />
              <Button
                variant="contained"
                color="primary"
                size="small"
                style={{ maxHeight: 32 }}
                onClick={() => envRemove(index)}
              >
                X√≥a
              </Button>
            </Box>
          ))}

          <Typography variant="h5">C∆° h·ªôi</Typography>
          <Button
            variant="contained"
            color="primary"
            size="small"
            onClick={() => opportunityAppend({ name: ' ' })}
          >
            Th√™m
          </Button>
          {opportunityFields.map((item, index) => (
            <Box
              key={item.id}
              display="flex"
              alignItems="center"
              paddingLeft={4}
            >
              <MuiTextField
                fullWidth={false}
                control={control}
                getValues={getValues}
                register={register}
                nameField={`opportunity[${index}]`}
              />
              <Button
                variant="contained"
                color="primary"
                size="small"
                style={{ maxHeight: 32 }}
                onClick={() => opportunityRemove(index)}
              >
                X√≥a
              </Button>
            </Box>
          ))}

          <Button
            variant="contained"
            color="secondary"
            type="submit"
            size="large"
            fullWidth
            style={{
              marginTop: 8,
            }}
          >
            C·∫≠p nh·∫≠t th√¥ng tin
          </Button>
        </form>
      </Paper>
    </Container>
  );
};

export default CompanyUpdateInfo;
